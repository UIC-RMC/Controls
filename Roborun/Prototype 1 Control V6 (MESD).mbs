option explicit ' Forces variables to be declared before use. Good practice for avoiding errors


print("starting ... \r") ' Lets user know script is starting

top:
Dim ch1 as Integer' since option explicit, variables must be declared
Dim ch2 as Integer' since option explicit, variables must be declared
Dim speed1 as Integer
Dim speed2 as Integer
Dim diff as Integer
ch1 = getValue(_PI, 1) ' read channel 1
ch2 = getValue(_PI, 2) ' read channel 2
'speed1 = 400
'speed2 = 400
print("Ch1: ", ch1)
print("\n")
print("Ch2: ", ch2)
print("\n")


'stop
if ch1 < 1600 and ch1 > 1300 then
	SetCommand(_GO, 1, 0) 'motor 1 stop
	print("ch1 stop \n")

Elseif ch1 > 1600 and ch1 <1900 then
	diff = abs(1900 - ch1)
	diff = abs(diff - 300)/10 ' this produces a value from 5 to 30
	'print(diff)
	speed1 = diff * 20
	SetCommand(_GO, 1, speed1) 'motor 1 stop
	print(speed1)
	print("extend digging \n")
	
Elseif ch1 <1300 and ch1 > 1000 then
	diff = abs(1300 - ch1)/10
	speed1 = diff * 20
	SetCommand(_GO, 1, -speed1) 'motor 1 stop
	print(-speed1)
	print("collapse digging \n")

Else
	SetCommand(_GO, 1, 0) 'motor 1 stop
	print("ch1 stop \n")
	
end if

if ch2 < 1600 and ch2 > 1300 then
	SetCommand(_GO, 2, 0) 'motor 2 stop
	print("ch2 stop \n")
	
Elseif ch2 > 1600 and ch2 <1900 then
	diff = abs(1900 - ch2)
	diff = abs(diff - 300)/10 ' this produces a value from 5 to 30
	speed2 = diff * 20
	SetCommand(_GO, 2, speed2) 'motor 2 stop
	print(speed2)
	print("extend dumping \n")
	
Elseif ch2 <1300 and ch2 > 1000 then
	diff = abs(1300 - ch2)/10
	speed2 = diff * 20
	SetCommand(_GO, 2, -speed2) 'motor 2 stop
	print(-speed2)
	print("collapse dumping \n")

Else
	print("ch1 stop \n")
	
end if


wait(500)

Goto top

